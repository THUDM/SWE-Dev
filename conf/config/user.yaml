# SWE-Dev User Configuration Example
# Rename this file to user.yaml and adjust settings to meet your needs
# Use --config-name=user when starting to use this configuration

# Basic directory settings
paths:
  conda_bin: /path/to/conda/bin/conda  # Change to your conda path
  conda_base: /path/to/conda/  # Change to your conda base directory
  local_repo_dir: /path/to/repos  # Change to your local repository directory
  playground: /path/to/playground  # Change to your playground directory

# API credentials
github:
  tokens: ["ghp_your_github_token_here"]  # Add your GitHub token
  api_url: https://api.github.com

# OpenAI base settings
openai:
  base_url: https://api.openai.com/v1
  base_model: gpt-4o
  api_key: ${oc.env:OPENAI_API_KEY,sk-yourdefaultkeyhere}  # Default uses environment variable, or set directly here

# Pipeline stage-specific model settings
# This demonstrates how to use different models and API endpoints for different stages

# Localization stage - Using locally deployed Llama model
localizer:
  model: llama3-70b  # Using a different model
  base_url: http://localhost:8000/v1  # Local API endpoint

# Description generation stage - Using Claude
description:
  model: claude-3-opus-20240229  # Using Claude model
  base_url: https://api.anthropic.com/v1  # Anthropic API endpoint

# Testcase generation stage - Using OpenAI
testcase:
  model: ${openai.base_model}  # Use default OpenAI model
  base_url: ${openai.base_url}  # Use default OpenAI endpoint

# Data collection settings
data_collection:
  max_repos: 1000
  max_pulls: 500
  num_workers: 4  # Adjust according to your CPU cores

# Code localization settings
code_localization:
  top_n: 5
  num_workers: 16  # Adjust according to your CPU cores

# Test generation settings
test_generation:
  num_workers: 8  # Adjust according to your CPU cores
  model: ${openai.base_model}

# Test evaluation settings
test_evaluation:
  num_workers: 8  # Adjust according to your CPU cores
  docker:
    enabled: true
    image: testcase-image:latest

# Dataset creation settings
dataset_creation:
  output_folder: results/your_dataset_name
  dataset_type: openhands 